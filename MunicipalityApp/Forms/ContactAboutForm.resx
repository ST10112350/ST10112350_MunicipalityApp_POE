<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>